version: "3.8"

services:
  postgres:
    image: postgres:13-alpine
    container_name: postgres-db
    environment:
      POSTGRES_DB: ecommerce
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ModienneG
    volumes:
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "5432:5432"
    restart: always
    networks:
      - ecommerce-network

  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - ecommerce-network
    restart: always

  config-server:
    build:
      context: ./config-server
      dockerfile: Dockerfile
    container_name: config-server
    ports:
      - "8888:8888"
    depends_on:
      - eureka-server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 60s
    networks:
      - ecommerce-network
    restart: always

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "8080:8080"
    depends_on:
      config-server:
        condition: service_healthy
      postgres:
        condition: service_started
    environment:
      SPRING_CONFIG_IMPORT: "optional:configserver:http://config-server:8888"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://eureka-server:8761/eureka/"
    networks:
      - ecommerce-network

networks:
  ecommerce-network:
    driver: bridge